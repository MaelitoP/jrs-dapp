import type detectEthereumProvider from '@metamask/detect-provider';
import type { Actions } from '@web3-react/types';
import { Connector } from '@web3-react/types';
export declare class NoMetaMaskError extends Error {
    constructor();
}
export interface AddEthereumChainParameter {
    chainId: number;
    chainName: string;
    nativeCurrency: {
        name: string;
        symbol: string;
        decimals: 18;
    };
    rpcUrls: string[];
    blockExplorerUrls?: string[];
    iconUrls?: string[];
}
export declare class MetaMask extends Connector {
    private readonly options?;
    private eagerConnection?;
    constructor(actions: Actions, connectEagerly?: boolean, options?: Parameters<typeof detectEthereumProvider>[0]);
    private initialize;
    activate(desiredChainIdOrChainParameters?: number | AddEthereumChainParameter): Promise<void>;
}
